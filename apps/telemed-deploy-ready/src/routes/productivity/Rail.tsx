import { useState } from "react"; import { Button } from "@/src/components/ui/button"; import { Input } from "@/src/components/ui/input"; import { Textarea } from "@/src/components/ui/textarea"; import { Card, CardContent, CardHeader, CardTitle } from "@/src/components/ui/card"; import { PRODUCTIVITY_URL, authToken } from "./shared"; import { ScribeWidget } from "./Scribe";
export default function ProductivityRail(){ const [consultId,setConsultId]=useState(''); const [notes,setNotes]=useState(''); const [cid,setCid]=useState(''); const [soap,setSoap]=useState<any>(null); const [sugs,setSugs]=useState<any[]>([]);
 async function saveNote(){ await fetch(`${PRODUCTIVITY_URL}/notes`,{ method:'POST', headers:{'Content-Type':'application/json','Authorization':'Bearer '+authToken()}, body: JSON.stringify({ patientId:'demo-patient', consultId, text: notes })}); }
 async function summarize(){ const r=await fetch(`${PRODUCTIVITY_URL}/ai/summarize`,{ method:'POST', headers:{'Content-Type':'application/json','Authorization':'Bearer '+authToken()}, body: JSON.stringify({ consultId })}); const j=await r.json(); setSoap(j.soap); }
 async function suggest(){ const r=await fetch(`${PRODUCTIVITY_URL}/ai/codes/suggest`,{ method:'POST', headers:{'Content-Type':'application/json','Authorization':'Bearer '+authToken()}, body: JSON.stringify({ consultId, text: soap?JSON.stringify(soap):'' })}); const j=await r.json(); setSugs(j.suggestions||[]); }
 async function followup(){ const r=await fetch(`${PRODUCTIVITY_URL}/followups/suggest`,{ method:'POST', headers:{'Content-Type':'application/json','Authorization':'Bearer '+authToken()}, body: JSON.stringify({ consultId, code: cid||'Z09' })}); const j=await r.json(); alert(`Sugerido retorno em ~${j.suggestionDays} dias (id ${j.followupId})`); }
 return <div className='grid grid-cols-1 gap-4 p-4'><ScribeWidget consultId={consultId}/><Card><CardHeader><CardTitle>Contexto</CardTitle></CardHeader><CardContent><Input placeholder='Consult ID' value={consultId} onChange={e=>setConsultId(e.target.value)} /></CardContent></Card><Card><CardHeader><CardTitle>Notas</CardTitle></CardHeader><CardContent><Textarea value={notes} onChange={e=>setNotes(e.target.value)} /><div className='text-right'><Button onClick={saveNote}>Salvar nota</Button></div></CardContent></Card><Card><CardHeader><CardTitle>Resumo (SOAP)</CardTitle></CardHeader><CardContent><Button onClick={summarize}>Gerar rascunho</Button>{soap && <pre className='text-xs bg-gray-50 p-2 rounded'>{JSON.stringify(soap,null,2)}</pre>}</CardContent></Card><Card><CardHeader><CardTitle>CIDs/Procedimentos</CardTitle></CardHeader><CardContent><div className='flex gap-2'><Input placeholder='CID (opcional)' value={cid} onChange={e=>setCid(e.target.value)} /><Button onClick={suggest}>Sugerir</Button></div>{sugs.map((s:any)=><div key={s.id} className='text-sm border rounded-xl p-2'><b>{s.codeSystem} {s.code}</b> â€” {s.description} (score {s.score?.toFixed(2)})</div>)}</CardContent></Card><Card><CardHeader><CardTitle>Retorno</CardTitle></CardHeader><CardContent><Button onClick={followup}>Sugerir retorno</Button></CardContent></Card></div>; }