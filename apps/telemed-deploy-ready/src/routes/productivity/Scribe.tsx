import { useRef, useState } from "react"; import { Button } from "@/src/components/ui/button"; import { Card, CardContent, CardHeader, CardTitle } from "@/src/components/ui/card"; import { PRODUCTIVITY_URL, authToken } from "./shared";
export function ScribeWidget({ consultId='demo-consult' }:{ consultId?: string }){ const mediaRef=useRef<MediaRecorder|null>(null); const [recording,setRecording]=useState(false); const [lastText,setLastText]=useState('');
 async function start(){ const stream = await navigator.mediaDevices.getUserMedia({ audio:true }); const rec = new MediaRecorder(stream, { mimeType:'audio/webm' }); mediaRef.current = rec; const chunks: BlobPart[] = []; rec.ondataavailable = e=>{ if(e.data.size>0) chunks.push(e.data); }; rec.onstop = async ()=>{ const blob=new Blob(chunks,{type:'audio/webm'}); const fd=new FormData(); fd.append('audio', blob, 'audio.webm'); fd.append('consultId', consultId); const r=await fetch(`${PRODUCTIVITY_URL}/ai/scribe/upload`,{ method:'POST', headers:{ 'Authorization': 'Bearer '+authToken() }, body: fd }); const j=await r.json(); if(j?.text) setLastText(j.text); }; rec.start(); setRecording(true); }
 function stop(){ mediaRef.current?.stop(); setRecording(false); }
 return <Card><CardHeader><CardTitle>Scribe (ASR)</CardTitle></CardHeader><CardContent className='space-y-2'><div className='flex gap-2'>{!recording ? <Button onClick={start}>Gravar</Button> : <Button onClick={stop}>Parar</Button>}</div>{lastText && <pre className='text-xs bg-gray-50 p-2 rounded'>{lastText}</pre>}</CardContent></Card>; }