services:
- type: postgres
  name: telemed-db
  plan: starter
  databaseName: telemed
  user: telemed
  ipAllowList: []
- type: redis
  name: telemed-cache
  plan: starter
  ipAllowList: []
- type: web
  name: telemed-deploy-ready
  env: python
  branch: main
  rootDir: apps/telemed-deploy-ready
  plan: starter
  buildCommand: ''
  startCommand: python -m http.server $PORT
  healthCheckPath: /
  autoDeploy: true
  envVars:
  - key: DATABASE_URL
    fromDatabase:
      name: telemed-db
      property: connectionString
  - key: REDIS_URL
    fromService:
      name: telemed-cache
      type: redis
      property: connectionString
- type: web
  name: medicaldesk-1
  env: node
  branch: main
  rootDir: apps/medicaldesk-1
  plan: starter
  buildCommand: npm ci || npm install && npm run build
  startCommand: NODE_ENV=production node dist/index.js
  healthCheckPath: /
  autoDeploy: true
  envVars:
  - key: DATABASE_URL
    fromDatabase:
      name: telemed-db
      property: connectionString
  - key: REDIS_URL
    fromService:
      name: telemed-cache
      type: redis
      property: connectionString
- type: web
  name: receitacerta
  env: node
  branch: main
  rootDir: apps/receitacerta
  plan: starter
  buildCommand: npm ci || npm install && npm run build
  startCommand: NODE_ENV=production node dist/index.js
  healthCheckPath: /
  autoDeploy: true
  envVars:
  - key: DATABASE_URL
    fromDatabase:
      name: telemed-db
      property: connectionString
  - key: REDIS_URL
    fromService:
      name: telemed-cache
      type: redis
      property: connectionString
- type: web
  name: telemed-auction
  env: node
  branch: main
  rootDir: apps/auction-service
  plan: starter
  buildCommand: npm ci || npm install && npx prisma generate
  startCommand: npm run start
  healthCheckPath: /healthz
  autoDeploy: true
  envVars:
  - key: DATABASE_URL
    fromDatabase:
      name: telemed-db
      property: connectionString
  - key: REDIS_URL
    fromService:
      name: telemed-cache
      type: redis
      property: connectionString
  - key: JWT_SECRET
    value: change-me
  - key: INTERNAL_TOKEN
    value: change-me-internal
  - key: PUBLIC_BASE_URL
    value: https://telemed-deploy-ready.onrender.com
  - key: AUCTION_ENABLED
    value: 'true'
  - key: AUCTION_IMMEDIATE_EXPIRES_MIN
    value: '15'
  - key: AUCTION_MIN_PRICE_DEFAULT_IMMEDIATE_CENTS
    value: '8000'
  - key: AUCTION_MIN_PRICE_DEFAULT_SCHEDULED_CENTS
    value: '6000'
  - key: PAYMENTS_PROVIDER
    value: mock
  - key: INTERNAL_URL_TELEMED
    value: https://telemed-internal.onrender.com
- type: web
  name: telemed-internal
  env: node
  branch: main
  rootDir: apps/telemed-internal
  plan: starter
  buildCommand: npm ci || npm install && npx prisma generate
  startCommand: npm run start
  healthCheckPath: /healthz
  autoDeploy: true
  envVars:
  - key: DATABASE_URL
    fromDatabase:
      name: telemed-db
      property: connectionString
  - key: INTERNAL_TOKEN
    value: change-me-internal
- type: web
  name: telemed-productivity
  env: node
  branch: main
  rootDir: apps/productivity-service
  plan: starter
  buildCommand: npm ci || npm install && npx prisma generate
  startCommand: npm run start
  healthCheckPath: /healthz
  autoDeploy: true
  envVars:
  - key: DATABASE_URL
    fromDatabase:
      name: telemed-db
      property: connectionString
  - key: JWT_SECRET
    value: change-me
  - key: OPENAI_API_KEY
    value: ''
  - key: OPENAI_WHISPER_MODEL
    value: whisper-1
  - key: OPENAI_LLM_MODEL
    value: gpt-4o-mini
